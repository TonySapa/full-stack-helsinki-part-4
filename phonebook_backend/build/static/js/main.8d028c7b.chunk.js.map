{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/contacts.js","components/DeleteNotification.js","components/UpdateNotification.js","components/InfoAlert.js","components/DeleteInfoAlert.js","App.js","index.js"],"names":["Persons","persons","filterName","deleteContact","filter","person","name","toLowerCase","includes","toLocaleLowerCase","map","i","key","number","onClick","Filter","handleFilterChange","value","onChange","PersonForm","addperson","newName","handlepersonChange","newNumber","handlenumberChange","onSubmit","type","baseUrl","newObject","axios","post","then","response","data","id","put","delete","DeleteNotification","text","confirmation","UpdateNotification","InfoAlert","message","className","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","DeleteInfoAlert","App","props","useState","setpersons","setNewName","setNewNumber","setFilterName","deleteConfirmation","updateConfirmation","setUpdateConfirmation","infoMessage","setInfoMessage","deleteInfoMessage","setDeleteInfoMessage","useEffect","console","log","get","length","showUpdateConfirmation","setTimeout","event","target","duplicated","preventDefault","window","confirm","personObject","personService","p","concat","catch","err","returnedPerson","error","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d028c7b.chunk.js","sourcesContent":["import React from 'react'\r\n// import Person from './Person'\r\n\r\nconst Persons = ({ persons, filterName, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {persons.filter(person => person.name.toLowerCase().includes(filterName.toLocaleLowerCase())).map((person, i) => \r\n      <li key={person.name}>\r\n        {person.name} {person.number} \r\n        <button onClick={() => deleteContact(person)}>Delete</button>\r\n      </li>\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({filterName, handleFilterChange}) => {\r\n  return (\r\n    <div>\r\n      filter shown with\r\n      <input \r\n        value={filterName}\r\n        onChange={handleFilterChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ addperson, newName, handlepersonChange, newNumber, handlenumberChange }) => {\r\n\r\n  return (\r\n    <form onSubmit={addperson}>\r\n      <div>\r\n        name:\r\n        <input\r\n          value={newName}\r\n          onChange={handlepersonChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input\r\n          value={newNumber}\r\n          onChange={handlenumberChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons' // https://tsdev-fullstackopen-phonebook.herokuapp.com/api/persons\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  const nonExisting = {\r\n    id: 10000,\r\n    name: 'This number is not saved to server',\r\n    number: '601512398',\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting))\r\n  //return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React from \"react\";\r\n\r\nfunction DeleteNotification({ confirmation: { text } }) {\r\n  return text ? (\r\n    <div>{text}</div>\r\n  ) : null;\r\n}\r\n\r\nexport default DeleteNotification;","import React from \"react\";\r\n\r\nfunction UpdateNotification({ confirmation: { text } }) {\r\n  return text ? (\r\n    <div>{text}</div>\r\n  ) : null;\r\n}\r\n\r\nexport default UpdateNotification;","import React from 'react'\r\n\r\nconst InfoAlert = ({ message }) => {\r\n  const infoStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n\r\n  if (message === null || message === '') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"info\" style={infoStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoAlert","import React from 'react'\r\n\r\nconst DeleteInfoAlert = ({ message }) => {\r\n  const infoStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n\r\n  if (message === null || message === '') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"info\" style={infoStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteInfoAlert","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/contacts'\nimport DeleteNotification from './components/DeleteNotification'\nimport UpdateNotification from './components/UpdateNotification'\nimport InfoAlert from './components/InfoAlert'\nimport DeleteInfoAlert from './components/DeleteInfoAlert'\nimport { getNodeText } from '@testing-library/react'\n\n\nconst App = (props) => {\n  const [persons, setpersons] = useState([])\n  const [newName, setNewName] = useState('') \n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const deleteConfirmation = useState({ text: \"\", type: \"\" })\n  const [updateConfirmation, setUpdateConfirmation] = useState({ text: \"\", type: \"\" })\n  const [infoMessage, setInfoMessage] = useState('')\n  const [deleteInfoMessage, setDeleteInfoMessage] = useState('')\n\n  const hook = () => {\n    console.log('effect')\n    axios\n      .get('/api/persons') // https://tsdev-fullstackopen-phonebook.herokuapp.com/api/persons\n      .then(response => {\n        console.log('promise fulfilled')\n        setpersons(response.data)\n      })\n  }\n  \n  useEffect(hook, [])\n  console.log('render', persons.length, 'persons')\n\n  const addperson = (event) => {\n    event.preventDefault()\n    console.log(newName);\n    console.log(newNumber);\n\n    var duplicated;\n    for (let i = 0; i < persons.length; i++) {\n      if(persons[i].name.toLowerCase() === newName.toLowerCase()) {duplicated = true}\n    }\n\n    console.log(`duplicated: ${duplicated}`);\n    \n    if (!duplicated) {\n      const personObject = {\n        id: persons.length + 1,\n        name: newName,\n        number: newNumber\n      }\n      \n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setpersons(persons.concat(returnedPerson))\n          setInfoMessage(\n            `Added ${newName}`\n          )\n          setTimeout(() => {\n            setInfoMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          console.log(JSON.stringify(error.response.data));\n          setDeleteInfoMessage(\n            `${JSON.stringify(error.response.data)}`\n          )\n          setTimeout(() => {\n            setDeleteInfoMessage(null)\n          }, 5000)\n        })\n\n    } else if (duplicated) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personObject = {};\n        for (let i = 0; i < persons.length; i++) {\n          if ((persons[i].name).toLowerCase() === newName.toLowerCase()) {\n            personObject.name = newName;\n            personObject.number = newNumber;\n            personObject.id = persons[i].id;\n          }\n        }\n        console.log('personObject:' + personObject);\n        console.log(`personObject.id: ${personObject.id}`);\n        personService\n        .update(personObject.id, personObject)\n        .then(() => {\n          setpersons((persons.filter((p) => p.id !== personObject.id)).concat(personObject));\n          setInfoMessage(\n            `Updated ${newName} number`\n          )\n          setTimeout(() => {\n            setInfoMessage(null)\n          }, 5000)\n        })\n        .catch((err) => {\n          showUpdateConfirmation(`${personObject.name} was already updated`, \"error\");\n        });\n      }\n    }\n  }\n  \n  const handlepersonChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handlenumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setFilterName(event.target.value)\n  }\n\n  const deleteContact = ({ name, id }) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setpersons(persons.filter((p) => p.id !== id));\n          setInfoMessage(\n            `${name} has been successfully removed`\n          )\n          setTimeout(() => {\n            setInfoMessage(null)\n          }, 5000)\n        })\n        .catch((err) => {\n          setpersons(persons.filter((p) => p.id !== id));\n          setDeleteInfoMessage(\n            `Information of ${name} has already been removed from server`\n          )\n          setTimeout(() => {\n            setDeleteInfoMessage(null)\n          }, 5000)\n        });\n    }\n  };\n\n  const showUpdateConfirmation = (text, type) => {\n    setUpdateConfirmation({\n      text,\n      type,\n    });\n    if (type !== \"error\") {\n      setTimeout(() => {\n        setUpdateConfirmation({ text: \"\", type: \"\" });\n      }, 5000);\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <DeleteNotification confirmation={deleteConfirmation} />\n      <UpdateNotification confirmation={updateConfirmation} />\n      <InfoAlert message={infoMessage} />\n      <DeleteInfoAlert message={deleteInfoMessage} />\n      <Filter filterName={filterName} handleFilterChange={handleFilterChange} />\n      <h2>add a new:</h2>\n      <PersonForm addperson={addperson} newName={newName} handlepersonChange={handlepersonChange} newNumber={newNumber} handlenumberChange={handlenumberChange}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} filterName={filterName} deleteContact={deleteContact} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}